map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}
upstream supabase {
  	server localhost:3000;
}
upstream kong {
  	server localhost:8000;
}

# HTTPS server
#
server {
    listen 443 ssl default deferred;
    server_name {{ domains_without_prefix.stdout }};

    # first item is the right one to look for the saved key from letsencrypt
    # this is default behaviour of letsencrypt when multiple domains specified
    # in our case its always a list with at least one entry. so just take item at pos 0
    # ssl on; - deprecated(!)
    ssl_certificate         /etc/letsencrypt/live/{{ domain_names[0] }}/fullchain.pem;
    ssl_certificate_key     /etc/letsencrypt/live/{{ domain_names[0] }}/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/{{ domain_names[0] }}/fullchain.pem;

    ssl_session_cache shared:SSL:50m;
    ssl_session_timeout 5m;
    ssl_stapling on;
    ssl_stapling_verify on;

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
    ssl_ciphers "ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!MD5:!PSK:!RC4";

    ssl_dhparam /etc/nginx/dhparams.pem;
    ssl_prefer_server_ciphers on;

    root /var/www/{{ domain_names[0] }};
    index index.html index.htm;

    underscores_in_headers on;

    resolver 8.8.8.8;

    client_max_body_size 100m;

    auth_basic           "Admin Area";
    auth_basic_user_file /etc/httpd/.htpasswd;

        # REST API
    	location ~ ^/rest/v1/(.*)$ {
        	proxy_set_header Host $host;
    	    proxy_pass http://kong;
    	    proxy_redirect off;
      	}

    	# Authentication
    	location ~ ^/auth/v1/(.*)$ {
        	proxy_set_header Host $host;
    	    proxy_pass http://kong;
    	    proxy_redirect off;
      	}

    	# Realtime
    	location ~ ^/realtime/v1/(.*)$ {
        	proxy_redirect off;
    	    proxy_pass http://kong;
    	    proxy_http_version 1.1;
    	    proxy_set_header Upgrade $http_upgrade;
        	proxy_set_header Connection $connection_upgrade;
    	    proxy_set_header Host $host;
    	}

        # Studio
    	location / {
        	proxy_set_header Host $host;
    	    proxy_pass http://supabase;
    	    proxy_redirect off;
    	    proxy_set_header Upgrade $http_upgrade;
      	}
}