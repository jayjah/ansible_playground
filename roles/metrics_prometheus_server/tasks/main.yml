---
- name: Deny prometheus port
  ufw: rule=deny port={{ prometheus_port }} proto=tcp

- name: Deny grafana port
  ufw: rule=deny port={{ grafana_port }} proto=tcp

- name: Allow incoming access to prometheus from grafana port
  ufw:
    rule: allow
    direction: in
    proto: any
    from_port: "{{ grafana_port }}"
    to_port: "{{ prometheus_port }}"

- name: Allow incoming access from port 22 to prometheus
  ufw:
    rule: allow
    direction: in
    proto: any
    from_port: "22"
    to_port: "{{ prometheus_port }}"

- name: Allow incoming access from port 22 to grafana
  ufw:
    rule: allow
    direction: in
    proto: any
    from_port: "22"
    to_port: "{{ grafana_port }}"

- name: Allow all access from subnet network to prometheus
  ufw:
    rule: allow
    direction: in
    proto: any
    src: '{{ item }}'
    to_port: "{{ prometheus_port }}"
  loop:
    - "{{ default_server_network_ip_range }}"

- name: Allow all access from subnet network to loki
  ufw:
    rule: allow
    direction: in
    proto: any
    src: '{{ item }}'
    to_port: "{{ loki_port }}"
  loop:
    - "{{ default_server_network_ip_range }}"

- name: Allow all access from subnet network to grafana
  ufw:
    rule: allow
    direction: in
    proto: any
    src: '{{ item }}'
    to_port: "{{ grafana_port }}"
  loop:
    - "{{ default_server_network_ip_range }}"

- name: Allow all access from subnet network to prometheus
  ufw:
    rule: allow
    direction: in
    proto: any
    src: '{{ item }}'
    to_port: "{{ prometheus_port }}"
  loop:
    - "{{ default_server_network_ip_range }}"

#- name: Allow incoming access vom localhost
#  ufw:
#    rule: allow
#    direction: in
#    proto: any
#    from_ip: 127.0.0.1

- name: Create prometheus directory
  file:
    path: "/home/{{ username }}/prometheus"
    state: directory
    owner: "{{ username }}"
    group: "{{ username }}"
    mode: 0755

- name: Create prometheus/dashboards directory
  file:
    path: "/home/{{ username }}/metrics_prometheus_server/dashboards"
    state: directory
    owner: "{{ username }}"
    group: "{{ username }}"
    mode: 0755

- name: Create prometheus/prometheusdata directory
  file:
    path: "/home/{{ username }}/prometheus/prometheusdata"
    state: directory
    owner: "{{ username }}"
    group: "{{ username }}"
    mode: 0755

- name: Create prometheus/grafanadata directory
  file:
    path: "/home/{{ username }}/prometheus/grafanadata"
    state: directory
    owner: "{{ username }}"
    group: "{{ username }}"
    mode: 0755

- name: Install prometheus/grafana rest-server.json
  copy:
    src: templates/metrics_prometheus_server/dashboards/rest-server.json
    dest: "/home/{{ username }}/prometheus/dashboards/rest-server.json"
    owner: "{{ username }}"
    group: "{{ username }}"
    mode: 0755
    force: no

- name: Install grafana.ini file
  template:
    src: templates/metrics_prometheus_server/grafana.ini
    dest: "/home/{{ username }}/prometheus/grafana.ini"
    force: yes

- name: Install prometheus.yaml file
  template:
    src: templates/metrics_prometheus_server/prometheus.yaml.j2
    dest: "/home/{{ username }}/prometheus/prometheus.yaml"
    force: yes

- name: Install loki-config.yaml file
  template:
    src: templates/metrics_prometheus_server/loki-config.yaml.j2
    dest: "/home/{{ username }}/prometheus/loki-config.yaml"
    force: yes

- name: Install promtail-config.yaml file
  template:
    src: templates/metrics_prometheus_server/promtail-config.yaml.j2
    dest: "/home/{{ username }}/prometheus/promtail-config.yaml"
    force: yes

- name: Install docker-compose.yaml file
  template:
    src: templates/metrics_prometheus_server/docker-compose.yaml.j2
    dest: "/home/{{ username }}/prometheus/docker-compose.yaml"
    force: yes

- name: Install alert.rules file
  copy:
    src: templates/metrics_prometheus_server/alert.rules
    dest: "/home/{{ username }}/prometheus/alert.rules"
    remote_src: false

- name: Install blackbox.yaml file
  template:
    src: templates/metrics_prometheus_server/blackbox.yaml.j2
    dest: "/home/{{ username }}/prometheus/blackbox.yaml"
    force: yes

- name: Install alertmanager.yaml file
  template:
    src: templates/metrics_prometheus_server/alertmanager.yaml.j2
    dest: "/home/{{ username }}/prometheus/alertmanager.yaml"
    force: yes

- name: Ensure prometheus is not running
  docker_compose:
    project_src: "/home/{{ username }}/prometheus/"
    remove_images: all
    state: absent

- name: Create prometheus instance
  docker_compose:
    project_src: "/home/{{ username }}/prometheus/"
    state: present
