---
- name: Start cadvisor container (docker metrics)
  docker_container:
    name: cadvisor
    image: gcr.io/cadvisor/cadvisor
    state: started
    recreate: yes
    restart: yes
    restart_policy: unless-stopped
    published_ports:
      - "{{ cadvisor_metrics_port }}:8080"
    output_logs: yes
    log_driver: json-file
    log_options:
      max-size: 10m
      labels: cadvisor
      max-file: '3'
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      # to collect data from docker on macos host:
      - /var/run/docker.sock:/var/run/docker.sock:rw

- name: Start node-exporter container (os metrics)
  docker_container:
    name: node-exporter
    image: prom/node-exporter
    state: started
    recreate: yes
    restart: yes
    restart_policy: unless-stopped
    pid_mode: host
    #network_mode: host
    command: "--path.rootfs=/host"
    published_ports:
      - "{{ node_metrics_port }}:9100"
    volumes:
      - "/:/host:ro,rslave"
    output_logs: yes
    log_driver: json-file
    log_options:
      max-size: 10m
      labels: node-exporter
      max-file: '3'

- name: Start postgres metrics
  docker_container:
    name: postgres-exporter
    image: quay.io/prometheuscommunity/postgres-exporter
    state: started
    recreate: yes
    restart: yes
    restart_policy: unless-stopped
    published_ports:
      - "{{ postgres_metrics_port }}:9187"
    links:
      - "{{ postgres_container_name }}:"
    output_logs: yes
    log_driver: json-file
    log_options:
      max-size: 10m
      labels: postgres-exporter
      max-file: '3'
    env:
      DATA_SOURCE_USER: "{{ postgres_db_user }}"
      DATA_SOURCE_PASS: "{{ postgres_db_password }}"
      DATA_SOURCE_URI: "{{ postgres_container_name }}:{{ postgres_container_port }}?sslmode=disable"
      PG_auto-discover-databases: "true"
  when: enable_postgres == True and inventory_hostname != 'metricsandbackups'